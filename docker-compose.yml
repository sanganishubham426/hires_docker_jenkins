version: '3.9'

services:
  db:
    image: postgres:latest
    container_name: Hires_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - backend
    restart: always


  hires:
    build: ./Django
    #image: voidbroaderai/hires-react:latest
    container_name: Hires_Django
    env_file:
      - .env    
    volumes:
      - ./Django:/hires
      - static_volume:/hires/static
      - media_volume:/hires/media
    networks:
      - backend
    depends_on:
      - db
    restart: always


  react-production:
    build: ./React
    #image: voidbroaderai/hires-django:latest
    container_name: Hires_react
    networks:
      - frontend
      - backend
    restart: always

  
  nginx:
    build: ./nginx
    container_name: Hires_nginx
    volumes:
      - static_volume:/hires/static
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - media_volume:/hires/media
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - hires
      - react-production
    networks:
      - backend
      - frontend
    restart: always


volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge
